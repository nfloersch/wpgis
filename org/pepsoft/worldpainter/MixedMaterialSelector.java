/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.pepsoft.worldpainter;

import java.awt.Color;
import java.awt.Cursor;
import javax.swing.SwingUtilities;
import static org.pepsoft.minecraft.Constants.*;

/**
 *
 * @author SchmitzP
 */
public class MixedMaterialSelector extends javax.swing.JPanel {
    /**
     * Creates new form MixedMaterialSelector
     */
    public MixedMaterialSelector() {
        initComponents();
    }

    public boolean isExtendedBlockIds() {
        return extendedBlockIds;
    }

    public void setExtendedBlockIds(boolean extendedBlockIds) {
        this.extendedBlockIds = extendedBlockIds;
    }

    public MixedMaterial getMixedMaterial() {
        return materialSelected ? material : null;
    }
    
    public void setMixedMaterial(MixedMaterial material) {
        this.material = material;
        materialSelected = material != null;
        if (material != null) {
            materialSelected = true;
            radioButtonMaterial.setSelected(true);
        } else {
            materialSelected = false;
            radioButtonNoMaterial.setSelected(true);
        }
        setControlStates();
    }
    
    @Override
    public int getBaseline(int width, int height) {
        return radioButtonNoMaterial.getBaseline(width, height);
    }

    private void setControlStates() {
        if (materialSelected) {
            radioButtonMaterial.setForeground(Color.BLUE);
            radioButtonMaterial.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        } else {
            radioButtonMaterial.setForeground(Color.GRAY);
            radioButtonMaterial.setCursor(null);
        }
        if (material != null) {
            radioButtonMaterial.setText("<html><u>" + material.getName() + "</u></html>");
        } else {
            radioButtonMaterial.setText("<html><u>click to select</u></html>");
        }
    }

    private void editMaterial(MixedMaterial material) {
        CustomMaterialDialog dialog = new CustomMaterialDialog(SwingUtilities.getWindowAncestor(this), material, extendedBlockIds);
        dialog.setVisible(true);
        if (! dialog.isCancelled()) {
            this.material = dialog.getMaterial();
            setControlStates();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        radioButtonNoMaterial = new javax.swing.JRadioButton();
        radioButtonMaterial = new javax.swing.JRadioButton();

        buttonGroup1.add(radioButtonNoMaterial);
        radioButtonNoMaterial.setSelected(true);
        radioButtonNoMaterial.setText("none");
        radioButtonNoMaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonNoMaterialActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioButtonMaterial);
        radioButtonMaterial.setForeground(java.awt.Color.gray);
        radioButtonMaterial.setText("<html><u>click to select</u></html>");
        radioButtonMaterial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                radioButtonMaterialMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(radioButtonNoMaterial)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioButtonMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(radioButtonNoMaterial)
                .addComponent(radioButtonMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void radioButtonNoMaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonNoMaterialActionPerformed
        if (radioButtonNoMaterial.isSelected()) {
            materialSelected = false;
            setControlStates();
        }
    }//GEN-LAST:event_radioButtonNoMaterialActionPerformed

    private void radioButtonMaterialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radioButtonMaterialMouseClicked
//        System.out.println("radioButtonMaterial.selected: " + radioButtonMaterial.isSelected());
//        System.out.println("materialSelected: " + materialSelected);
//        System.out.println("material: " + material);
        if ((material == null) || materialSelected) {
            if (material == null) {
                editMaterial(MixedMaterial.create(BLK_DIRT));
            } else {
                editMaterial(material);
            }
        }
        if (material != null) {
            materialSelected = true;
        } else {
            radioButtonNoMaterial.setSelected(true);
        }
        setControlStates();
    }//GEN-LAST:event_radioButtonMaterialMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton radioButtonMaterial;
    private javax.swing.JRadioButton radioButtonNoMaterial;
    // End of variables declaration//GEN-END:variables

    private MixedMaterial material;
    private boolean materialSelected, extendedBlockIds;
}